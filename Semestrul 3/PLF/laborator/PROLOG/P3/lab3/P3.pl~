%combinari
combina([H|_],1,[H]).
combina([_|T],K,R) :- combina(T,K,R).
combina([H|T],K,[H|R]) :- K > 1 , K1 is K - 1 , combina(T,K1,R).
adev_comb(L,R,K) :- findall(X, combina(L,K,X),R).

%permutari
inser(E,L,[E|L]).
inser(E,[H|L],[H|R]) :- inser(E,L,R).

permu([],[]).
permu([H|T],R) :- permu(T,R2) , inser(H,R2,R).
adev_permu(L,R) :- findall(X,permu(L,X),R).



%aranjamente
aranjamente(L,R,K) :- combina(L,K,R2) , permut(R2,R).
adev_aranjamente(L,R,K) :- findall(X,aranjamente(L,X,K),R).
